/* axios v0.27.2 | (c) 2022 by Matt Zabriskie */
!(function (e, t) {
  typeof exports === 'object' && typeof module === 'object'
    ? (module.exports = t())
    : typeof define === 'function' && define.amd
    ? define([], t)
    : typeof exports === 'object'
    ? (exports.axios = t())
    : (e.axios = t());
})(this, function () {
  return (function (e) {
    const t = {};
    function n(r) {
      if (t[r]) return t[r].exports;
      const o = (t[r] = { i: r, l: !1, exports: {} });
      return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
    }
    return (
      (n.m = e),
      (n.c = t),
      (n.d = function (e, t, r) {
        n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
      }),
      (n.r = function (e) {
        typeof Symbol !== 'undefined' &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (n.t = function (e, t) {
        if ((1 & t && (e = n(e)), 8 & t)) return e;
        if (4 & t && typeof e === 'object' && e && e.__esModule) return e;
        const r = Object.create(null);
        if (
          (n.r(r),
          Object.defineProperty(r, 'default', { enumerable: !0, value: e }),
          2 & t && typeof e !== 'string')
        )
          for (const o in e)
            n.d(
              r,
              o,
              function (t) {
                return e[t];
              }.bind(null, o)
            );
        return r;
      }),
      (n.n = function (e) {
        const t =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return n.d(t, 'a', t), t;
      }),
      (n.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (n.p = ''),
      n((n.s = 13))
    );
  })([
    function (e, t, n) {
      let r;
      const o = n(4);
      const i = Object.prototype.toString;
      const s =
        ((r = Object.create(null)),
        function (e) {
          const t = i.call(e);
          return r[t] || (r[t] = t.slice(8, -1).toLowerCase());
        });
      function a(e) {
        return (
          (e = e.toLowerCase()),
          function (t) {
            return s(t) === e;
          }
        );
      }
      function u(e) {
        return Array.isArray(e);
      }
      function c(e) {
        return void 0 === e;
      }
      const f = a('ArrayBuffer');
      function l(e) {
        return e !== null && typeof e === 'object';
      }
      function p(e) {
        if (s(e) !== 'object') return !1;
        const t = Object.getPrototypeOf(e);
        return t === null || t === Object.prototype;
      }
      const d = a('Date');
      const h = a('File');
      const m = a('Blob');
      const v = a('FileList');
      function y(e) {
        return i.call(e) === '[object Function]';
      }
      const g = a('URLSearchParams');
      function E(e, t) {
        if (e != null)
          if ((typeof e !== 'object' && (e = [e]), u(e)))
            for (let n = 0, r = e.length; n < r; n++) t.call(null, e[n], n, e);
          else
            for (const o in e)
              Object.prototype.hasOwnProperty.call(e, o) &&
                t.call(null, e[o], o, e);
      }
      let b;
      const O =
        ((b =
          typeof Uint8Array !== 'undefined' &&
          Object.getPrototypeOf(Uint8Array)),
        function (e) {
          return b && e instanceof b;
        });
      e.exports = {
        isArray: u,
        isArrayBuffer: f,
        isBuffer: function (e) {
          return (
            e !== null &&
            !c(e) &&
            e.constructor !== null &&
            !c(e.constructor) &&
            typeof e.constructor.isBuffer === 'function' &&
            e.constructor.isBuffer(e)
          );
        },
        isFormData: function (e) {
          return (
            e &&
            ((typeof FormData === 'function' && e instanceof FormData) ||
              i.call(e) === '[object FormData]' ||
              (y(e.toString) && e.toString() === '[object FormData]'))
          );
        },
        isArrayBufferView: function (e) {
          return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView
            ? ArrayBuffer.isView(e)
            : e && e.buffer && f(e.buffer);
        },
        isString: function (e) {
          return typeof e === 'string';
        },
        isNumber: function (e) {
          return typeof e === 'number';
        },
        isObject: l,
        isPlainObject: p,
        isUndefined: c,
        isDate: d,
        isFile: h,
        isBlob: m,
        isFunction: y,
        isStream: function (e) {
          return l(e) && y(e.pipe);
        },
        isURLSearchParams: g,
        isStandardBrowserEnv: function () {
          return (
            (typeof navigator === 'undefined' ||
              (navigator.product !== 'ReactNative' &&
                navigator.product !== 'NativeScript' &&
                navigator.product !== 'NS')) &&
            typeof window !== 'undefined' &&
            typeof document !== 'undefined'
          );
        },
        forEach: E,
        merge: function e() {
          const t = {};
          function n(n, r) {
            p(t[r]) && p(n)
              ? (t[r] = e(t[r], n))
              : p(n)
              ? (t[r] = e({}, n))
              : u(n)
              ? (t[r] = n.slice())
              : (t[r] = n);
          }
          for (let r = 0, o = arguments.length; r < o; r++) E(arguments[r], n);
          return t;
        },
        extend: function (e, t, n) {
          return (
            E(t, function (t, r) {
              e[r] = n && typeof t === 'function' ? o(t, n) : t;
            }),
            e
          );
        },
        trim: function (e) {
          return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
        },
        stripBOM: function (e) {
          return e.charCodeAt(0) === 65279 && (e = e.slice(1)), e;
        },
        inherits: function (e, t, n, r) {
          (e.prototype = Object.create(t.prototype, r)),
            (e.prototype.constructor = e),
            n && Object.assign(e.prototype, n);
        },
        toFlatObject: function (e, t, n) {
          let r;
          let o;
          let i;
          const s = {};
          t = t || {};
          do {
            for (o = (r = Object.getOwnPropertyNames(e)).length; o-- > 0; )
              s[(i = r[o])] || ((t[i] = e[i]), (s[i] = !0));
            e = Object.getPrototypeOf(e);
          } while (e && (!n || n(e, t)) && e !== Object.prototype);
          return t;
        },
        kindOf: s,
        kindOfTest: a,
        endsWith: function (e, t, n) {
          (e = String(e)),
            (void 0 === n || n > e.length) && (n = e.length),
            (n -= t.length);
          const r = e.indexOf(t, n);
          return r !== -1 && r === n;
        },
        toArray: function (e) {
          if (!e) return null;
          let t = e.length;
          if (c(t)) return null;
          for (var n = new Array(t); t-- > 0; ) n[t] = e[t];
          return n;
        },
        isTypedArray: O,
        isFileList: v,
      };
    },
    function (e, t, n) {
      const r = n(0);
      function o(e, t, n, r, o) {
        Error.call(this),
          (this.message = e),
          (this.name = 'AxiosError'),
          t && (this.code = t),
          n && (this.config = n),
          r && (this.request = r),
          o && (this.response = o);
      }
      r.inherits(o, Error, {
        toJSON: function () {
          return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: this.config,
            code: this.code,
            status:
              this.response && this.response.status
                ? this.response.status
                : null,
          };
        },
      });
      const i = o.prototype;
      const s = {};
      [
        'ERR_BAD_OPTION_VALUE',
        'ERR_BAD_OPTION',
        'ECONNABORTED',
        'ETIMEDOUT',
        'ERR_NETWORK',
        'ERR_FR_TOO_MANY_REDIRECTS',
        'ERR_DEPRECATED',
        'ERR_BAD_RESPONSE',
        'ERR_BAD_REQUEST',
        'ERR_CANCELED',
      ].forEach(function (e) {
        s[e] = { value: e };
      }),
        Object.defineProperties(o, s),
        Object.defineProperty(i, 'isAxiosError', { value: !0 }),
        (o.from = function (e, t, n, s, a, u) {
          const c = Object.create(i);
          return (
            r.toFlatObject(e, c, function (e) {
              return e !== Error.prototype;
            }),
            o.call(c, e.message, t, n, s, a),
            (c.name = e.name),
            u && Object.assign(c, u),
            c
          );
        }),
        (e.exports = o);
    },
    function (e, t, n) {
      const r = n(1);
      function o(e) {
        r.call(this, e == null ? 'canceled' : e, r.ERR_CANCELED),
          (this.name = 'CanceledError');
      }
      n(0).inherits(o, r, { __CANCEL__: !0 }), (e.exports = o);
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(19);
      const i = n(1);
      const s = n(6);
      const a = n(7);
      const u = { 'Content-Type': 'application/x-www-form-urlencoded' };
      function c(e, t) {
        !r.isUndefined(e) &&
          r.isUndefined(e['Content-Type']) &&
          (e['Content-Type'] = t);
      }
      let f;
      var l = {
        transitional: s,
        adapter:
          ((typeof XMLHttpRequest !== 'undefined' ||
            (typeof process !== 'undefined' &&
              Object.prototype.toString.call(process) ===
                '[object process]')) &&
            (f = n(8)),
          f),
        transformRequest: [
          function (e, t) {
            if (
              (o(t, 'Accept'),
              o(t, 'Content-Type'),
              r.isFormData(e) ||
                r.isArrayBuffer(e) ||
                r.isBuffer(e) ||
                r.isStream(e) ||
                r.isFile(e) ||
                r.isBlob(e))
            )
              return e;
            if (r.isArrayBufferView(e)) return e.buffer;
            if (r.isURLSearchParams(e))
              return (
                c(t, 'application/x-www-form-urlencoded;charset=utf-8'),
                e.toString()
              );
            let n;
            const i = r.isObject(e);
            const s = t && t['Content-Type'];
            if ((n = r.isFileList(e)) || (i && s === 'multipart/form-data')) {
              const u = this.env && this.env.FormData;
              return a(n ? { 'files[]': e } : e, u && new u());
            }
            return i || s === 'application/json'
              ? (c(t, 'application/json'),
                (function (e, t, n) {
                  if (r.isString(e))
                    try {
                      return (t || JSON.parse)(e), r.trim(e);
                    } catch (e) {
                      if (e.name !== 'SyntaxError') throw e;
                    }
                  return (n || JSON.stringify)(e);
                })(e))
              : e;
          },
        ],
        transformResponse: [
          function (e) {
            const t = this.transitional || l.transitional;
            const n = t && t.silentJSONParsing;
            const o = t && t.forcedJSONParsing;
            const s = !n && this.responseType === 'json';
            if (s || (o && r.isString(e) && e.length))
              try {
                return JSON.parse(e);
              } catch (e) {
                if (s) {
                  if (e.name === 'SyntaxError')
                    throw i.from(
                      e,
                      i.ERR_BAD_RESPONSE,
                      this,
                      null,
                      this.response
                    );
                  throw e;
                }
              }
            return e;
          },
        ],
        timeout: 0,
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: n(27) },
        validateStatus: function (e) {
          return e >= 200 && e < 300;
        },
        headers: { common: { Accept: 'application/json, text/plain, */*' } },
      };
      r.forEach(['delete', 'get', 'head'], function (e) {
        l.headers[e] = {};
      }),
        r.forEach(['post', 'put', 'patch'], function (e) {
          l.headers[e] = r.merge(u);
        }),
        (e.exports = l);
    },
    function (e, t, n) {
      e.exports = function (e, t) {
        return function () {
          for (var n = new Array(arguments.length), r = 0; r < n.length; r++)
            n[r] = arguments[r];
          return e.apply(t, n);
        };
      };
    },
    function (e, t, n) {
      const r = n(0);
      function o(e) {
        return encodeURIComponent(e)
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',')
          .replace(/%20/g, '+')
          .replace(/%5B/gi, '[')
          .replace(/%5D/gi, ']');
      }
      e.exports = function (e, t, n) {
        if (!t) return e;
        let i;
        if (n) i = n(t);
        else if (r.isURLSearchParams(t)) i = t.toString();
        else {
          const s = [];
          r.forEach(t, function (e, t) {
            e != null &&
              (r.isArray(e) ? (t += '[]') : (e = [e]),
              r.forEach(e, function (e) {
                r.isDate(e)
                  ? (e = e.toISOString())
                  : r.isObject(e) && (e = JSON.stringify(e)),
                  s.push(o(t) + '=' + o(e));
              }));
          }),
            (i = s.join('&'));
        }
        if (i) {
          const a = e.indexOf('#');
          a !== -1 && (e = e.slice(0, a)),
            (e += (e.indexOf('?') === -1 ? '?' : '&') + i);
        }
        return e;
      };
    },
    function (e, t, n) {
      e.exports = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1,
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = function (e, t) {
        t = t || new FormData();
        const n = [];
        function o(e) {
          return e === null
            ? ''
            : r.isDate(e)
            ? e.toISOString()
            : r.isArrayBuffer(e) || r.isTypedArray(e)
            ? typeof Blob === 'function'
              ? new Blob([e])
              : Buffer.from(e)
            : e;
        }
        return (
          (function e(i, s) {
            if (r.isPlainObject(i) || r.isArray(i)) {
              if (n.indexOf(i) !== -1)
                throw Error('Circular reference detected in ' + s);
              n.push(i),
                r.forEach(i, function (n, i) {
                  if (!r.isUndefined(n)) {
                    let a;
                    const u = s ? s + '.' + i : i;
                    if (n && !s && typeof n === 'object')
                      if (r.endsWith(i, '{}')) n = JSON.stringify(n);
                      else if (r.endsWith(i, '[]') && (a = r.toArray(n)))
                        return void a.forEach(function (e) {
                          !r.isUndefined(e) && t.append(u, o(e));
                        });
                    e(n, u);
                  }
                }),
                n.pop();
            } else t.append(s, o(i));
          })(e),
          t
        );
      };
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(20);
      const i = n(21);
      const s = n(5);
      const a = n(9);
      const u = n(24);
      const c = n(25);
      const f = n(6);
      const l = n(1);
      const p = n(2);
      const d = n(26);
      e.exports = function (e) {
        return new Promise(function (t, n) {
          let h;
          let m = e.data;
          const v = e.headers;
          const y = e.responseType;
          function g() {
            e.cancelToken && e.cancelToken.unsubscribe(h),
              e.signal && e.signal.removeEventListener('abort', h);
          }
          r.isFormData(m) &&
            r.isStandardBrowserEnv() &&
            delete v['Content-Type'];
          let E = new XMLHttpRequest();
          if (e.auth) {
            const b = e.auth.username || '';
            const O = e.auth.password
              ? unescape(encodeURIComponent(e.auth.password))
              : '';
            v.Authorization = 'Basic ' + btoa(b + ':' + O);
          }
          const x = a(e.baseURL, e.url);
          function w() {
            if (E) {
              const r =
                'getAllResponseHeaders' in E
                  ? u(E.getAllResponseHeaders())
                  : null;
              const i = {
                data:
                  y && y !== 'text' && y !== 'json'
                    ? E.response
                    : E.responseText,
                status: E.status,
                statusText: E.statusText,
                headers: r,
                config: e,
                request: E,
              };
              o(
                function (e) {
                  t(e), g();
                },
                function (e) {
                  n(e), g();
                },
                i
              ),
                (E = null);
            }
          }
          if (
            (E.open(
              e.method.toUpperCase(),
              s(x, e.params, e.paramsSerializer),
              !0
            ),
            (E.timeout = e.timeout),
            'onloadend' in E
              ? (E.onloadend = w)
              : (E.onreadystatechange = function () {
                  E &&
                    E.readyState === 4 &&
                    (E.status !== 0 ||
                      (E.responseURL &&
                        E.responseURL.indexOf('file:') === 0)) &&
                    setTimeout(w);
                }),
            (E.onabort = function () {
              E &&
                (n(new l('Request aborted', l.ECONNABORTED, e, E)), (E = null));
            }),
            (E.onerror = function () {
              n(new l('Network Error', l.ERR_NETWORK, e, E, E)), (E = null);
            }),
            (E.ontimeout = function () {
              let t = e.timeout
                ? 'timeout of ' + e.timeout + 'ms exceeded'
                : 'timeout exceeded';
              const r = e.transitional || f;
              e.timeoutErrorMessage && (t = e.timeoutErrorMessage),
                n(
                  new l(
                    t,
                    r.clarifyTimeoutError ? l.ETIMEDOUT : l.ECONNABORTED,
                    e,
                    E
                  )
                ),
                (E = null);
            }),
            r.isStandardBrowserEnv())
          ) {
            const R =
              (e.withCredentials || c(x)) && e.xsrfCookieName
                ? i.read(e.xsrfCookieName)
                : void 0;
            R && (v[e.xsrfHeaderName] = R);
          }
          'setRequestHeader' in E &&
            r.forEach(v, function (e, t) {
              void 0 === m && t.toLowerCase() === 'content-type'
                ? delete v[t]
                : E.setRequestHeader(t, e);
            }),
            r.isUndefined(e.withCredentials) ||
              (E.withCredentials = !!e.withCredentials),
            y && y !== 'json' && (E.responseType = e.responseType),
            typeof e.onDownloadProgress === 'function' &&
              E.addEventListener('progress', e.onDownloadProgress),
            typeof e.onUploadProgress === 'function' &&
              E.upload &&
              E.upload.addEventListener('progress', e.onUploadProgress),
            (e.cancelToken || e.signal) &&
              ((h = function (e) {
                E &&
                  (n(!e || (e && e.type) ? new p() : e), E.abort(), (E = null));
              }),
              e.cancelToken && e.cancelToken.subscribe(h),
              e.signal &&
                (e.signal.aborted
                  ? h()
                  : e.signal.addEventListener('abort', h))),
            m || (m = null);
          const S = d(x);
          S && ['http', 'https', 'file'].indexOf(S) === -1
            ? n(new l('Unsupported protocol ' + S + ':', l.ERR_BAD_REQUEST, e))
            : E.send(m);
        });
      };
    },
    function (e, t, n) {
      const r = n(22);
      const o = n(23);
      e.exports = function (e, t) {
        return e && !r(t) ? o(e, t) : t;
      };
    },
    function (e, t, n) {
      e.exports = function (e) {
        return !(!e || !e.__CANCEL__);
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = function (e, t) {
        t = t || {};
        const n = {};
        function o(e, t) {
          return r.isPlainObject(e) && r.isPlainObject(t)
            ? r.merge(e, t)
            : r.isPlainObject(t)
            ? r.merge({}, t)
            : r.isArray(t)
            ? t.slice()
            : t;
        }
        function i(n) {
          return r.isUndefined(t[n])
            ? r.isUndefined(e[n])
              ? void 0
              : o(void 0, e[n])
            : o(e[n], t[n]);
        }
        function s(e) {
          if (!r.isUndefined(t[e])) return o(void 0, t[e]);
        }
        function a(n) {
          return r.isUndefined(t[n])
            ? r.isUndefined(e[n])
              ? void 0
              : o(void 0, e[n])
            : o(void 0, t[n]);
        }
        function u(n) {
          return n in t ? o(e[n], t[n]) : n in e ? o(void 0, e[n]) : void 0;
        }
        const c = {
          url: s,
          method: s,
          data: s,
          baseURL: a,
          transformRequest: a,
          transformResponse: a,
          paramsSerializer: a,
          timeout: a,
          timeoutMessage: a,
          withCredentials: a,
          adapter: a,
          responseType: a,
          xsrfCookieName: a,
          xsrfHeaderName: a,
          onUploadProgress: a,
          onDownloadProgress: a,
          decompress: a,
          maxContentLength: a,
          maxBodyLength: a,
          beforeRedirect: a,
          transport: a,
          httpAgent: a,
          httpsAgent: a,
          cancelToken: a,
          socketPath: a,
          responseEncoding: a,
          validateStatus: u,
        };
        return (
          r.forEach(Object.keys(e).concat(Object.keys(t)), function (e) {
            const t = c[e] || i;
            const o = t(e);
            (r.isUndefined(o) && t !== u) || (n[e] = o);
          }),
          n
        );
      };
    },
    function (e, t) {
      e.exports = { version: '0.27.2' };
    },
    function (e, t, n) {
      e.exports = n(14);
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(4);
      const i = n(15);
      const s = n(11);
      const a = (function e(t) {
        const n = new i(t);
        const a = o(i.prototype.request, n);
        return (
          r.extend(a, i.prototype, n),
          r.extend(a, n),
          (a.create = function (n) {
            return e(s(t, n));
          }),
          a
        );
      })(n(3));
      (a.Axios = i),
        (a.CanceledError = n(2)),
        (a.CancelToken = n(29)),
        (a.isCancel = n(10)),
        (a.VERSION = n(12).version),
        (a.toFormData = n(7)),
        (a.AxiosError = n(1)),
        (a.Cancel = a.CanceledError),
        (a.all = function (e) {
          return Promise.all(e);
        }),
        (a.spread = n(30)),
        (a.isAxiosError = n(31)),
        (e.exports = a),
        (e.exports.default = a);
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(5);
      const i = n(16);
      const s = n(17);
      const a = n(11);
      const u = n(9);
      const c = n(28);
      const f = c.validators;
      function l(e) {
        (this.defaults = e),
          (this.interceptors = { request: new i(), response: new i() });
      }
      (l.prototype.request = function (e, t) {
        typeof e === 'string' ? ((t = t || {}).url = e) : (t = e || {}),
          (t = a(this.defaults, t)).method
            ? (t.method = t.method.toLowerCase())
            : this.defaults.method
            ? (t.method = this.defaults.method.toLowerCase())
            : (t.method = 'get');
        const n = t.transitional;
        void 0 !== n &&
          c.assertOptions(
            n,
            {
              silentJSONParsing: f.transitional(f.boolean),
              forcedJSONParsing: f.transitional(f.boolean),
              clarifyTimeoutError: f.transitional(f.boolean),
            },
            !1
          );
        const r = [];
        let o = !0;
        this.interceptors.request.forEach(function (e) {
          (typeof e.runWhen === 'function' && !1 === e.runWhen(t)) ||
            ((o = o && e.synchronous), r.unshift(e.fulfilled, e.rejected));
        });
        let i;
        const u = [];
        if (
          (this.interceptors.response.forEach(function (e) {
            u.push(e.fulfilled, e.rejected);
          }),
          !o)
        ) {
          let l = [s, void 0];
          for (
            Array.prototype.unshift.apply(l, r),
              l = l.concat(u),
              i = Promise.resolve(t);
            l.length;

          )
            i = i.then(l.shift(), l.shift());
          return i;
        }
        for (var p = t; r.length; ) {
          const d = r.shift();
          const h = r.shift();
          try {
            p = d(p);
          } catch (e) {
            h(e);
            break;
          }
        }
        try {
          i = s(p);
        } catch (e) {
          return Promise.reject(e);
        }
        for (; u.length; ) i = i.then(u.shift(), u.shift());
        return i;
      }),
        (l.prototype.getUri = function (e) {
          e = a(this.defaults, e);
          const t = u(e.baseURL, e.url);
          return o(t, e.params, e.paramsSerializer);
        }),
        r.forEach(['delete', 'get', 'head', 'options'], function (e) {
          l.prototype[e] = function (t, n) {
            return this.request(
              a(n || {}, { method: e, url: t, data: (n || {}).data })
            );
          };
        }),
        r.forEach(['post', 'put', 'patch'], function (e) {
          function t(t) {
            return function (n, r, o) {
              return this.request(
                a(o || {}, {
                  method: e,
                  headers: t ? { 'Content-Type': 'multipart/form-data' } : {},
                  url: n,
                  data: r,
                })
              );
            };
          }
          (l.prototype[e] = t()), (l.prototype[e + 'Form'] = t(!0));
        }),
        (e.exports = l);
    },
    function (e, t, n) {
      const r = n(0);
      function o() {
        this.handlers = [];
      }
      (o.prototype.use = function (e, t, n) {
        return (
          this.handlers.push({
            fulfilled: e,
            rejected: t,
            synchronous: !!n && n.synchronous,
            runWhen: n ? n.runWhen : null,
          }),
          this.handlers.length - 1
        );
      }),
        (o.prototype.eject = function (e) {
          this.handlers[e] && (this.handlers[e] = null);
        }),
        (o.prototype.forEach = function (e) {
          r.forEach(this.handlers, function (t) {
            t !== null && e(t);
          });
        }),
        (e.exports = o);
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(18);
      const i = n(10);
      const s = n(3);
      const a = n(2);
      function u(e) {
        if (
          (e.cancelToken && e.cancelToken.throwIfRequested(),
          e.signal && e.signal.aborted)
        )
          throw new a();
      }
      e.exports = function (e) {
        return (
          u(e),
          (e.headers = e.headers || {}),
          (e.data = o.call(e, e.data, e.headers, e.transformRequest)),
          (e.headers = r.merge(
            e.headers.common || {},
            e.headers[e.method] || {},
            e.headers
          )),
          r.forEach(
            ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
            function (t) {
              delete e.headers[t];
            }
          ),
          (e.adapter || s.adapter)(e).then(
            function (t) {
              return (
                u(e),
                (t.data = o.call(e, t.data, t.headers, e.transformResponse)),
                t
              );
            },
            function (t) {
              return (
                i(t) ||
                  (u(e),
                  t &&
                    t.response &&
                    (t.response.data = o.call(
                      e,
                      t.response.data,
                      t.response.headers,
                      e.transformResponse
                    ))),
                Promise.reject(t)
              );
            }
          )
        );
      };
    },
    function (e, t, n) {
      const r = n(0);
      const o = n(3);
      e.exports = function (e, t, n) {
        const i = this || o;
        return (
          r.forEach(n, function (n) {
            e = n.call(i, e, t);
          }),
          e
        );
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = function (e, t) {
        r.forEach(e, function (n, r) {
          r !== t &&
            r.toUpperCase() === t.toUpperCase() &&
            ((e[t] = n), delete e[r]);
        });
      };
    },
    function (e, t, n) {
      const r = n(1);
      e.exports = function (e, t, n) {
        const o = n.config.validateStatus;
        n.status && o && !o(n.status)
          ? t(
              new r(
                'Request failed with status code ' + n.status,
                [r.ERR_BAD_REQUEST, r.ERR_BAD_RESPONSE][
                  Math.floor(n.status / 100) - 4
                ],
                n.config,
                n.request,
                n
              )
            )
          : e(n);
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = r.isStandardBrowserEnv()
        ? {
            write: function (e, t, n, o, i, s) {
              const a = [];
              a.push(e + '=' + encodeURIComponent(t)),
                r.isNumber(n) && a.push('expires=' + new Date(n).toGMTString()),
                r.isString(o) && a.push('path=' + o),
                r.isString(i) && a.push('domain=' + i),
                !0 === s && a.push('secure'),
                (document.cookie = a.join('; '));
            },
            read: function (e) {
              const t = document.cookie.match(
                new RegExp('(^|;\\s*)(' + e + ')=([^;]*)')
              );
              return t ? decodeURIComponent(t[3]) : null;
            },
            remove: function (e) {
              this.write(e, '', Date.now() - 864e5);
            },
          }
        : {
            write: function () {},
            read: function () {
              return null;
            },
            remove: function () {},
          };
    },
    function (e, t, n) {
      e.exports = function (e) {
        return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
      };
    },
    function (e, t, n) {
      e.exports = function (e, t) {
        return t ? e.replace(/\/+$/, '') + '/' + t.replace(/^\/+/, '') : e;
      };
    },
    function (e, t, n) {
      const r = n(0);
      const o = [
        'age',
        'authorization',
        'content-length',
        'content-type',
        'etag',
        'expires',
        'from',
        'host',
        'if-modified-since',
        'if-unmodified-since',
        'last-modified',
        'location',
        'max-forwards',
        'proxy-authorization',
        'referer',
        'retry-after',
        'user-agent',
      ];
      e.exports = function (e) {
        let t;
        let n;
        let i;
        const s = {};
        return e
          ? (r.forEach(e.split('\n'), function (e) {
              if (
                ((i = e.indexOf(':')),
                (t = r.trim(e.substr(0, i)).toLowerCase()),
                (n = r.trim(e.substr(i + 1))),
                t)
              ) {
                if (s[t] && o.indexOf(t) >= 0) return;
                s[t] =
                  t === 'set-cookie'
                    ? (s[t] ? s[t] : []).concat([n])
                    : s[t]
                    ? s[t] + ', ' + n
                    : n;
              }
            }),
            s)
          : s;
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = r.isStandardBrowserEnv()
        ? (function () {
            let e;
            const t = /(msie|trident)/i.test(navigator.userAgent);
            const n = document.createElement('a');
            function o(e) {
              let r = e;
              return (
                t && (n.setAttribute('href', r), (r = n.href)),
                n.setAttribute('href', r),
                {
                  href: n.href,
                  protocol: n.protocol ? n.protocol.replace(/:$/, '') : '',
                  host: n.host,
                  search: n.search ? n.search.replace(/^\?/, '') : '',
                  hash: n.hash ? n.hash.replace(/^#/, '') : '',
                  hostname: n.hostname,
                  port: n.port,
                  pathname:
                    n.pathname.charAt(0) === '/'
                      ? n.pathname
                      : '/' + n.pathname,
                }
              );
            }
            return (
              (e = o(window.location.href)),
              function (t) {
                const n = r.isString(t) ? o(t) : t;
                return n.protocol === e.protocol && n.host === e.host;
              }
            );
          })()
        : function () {
            return !0;
          };
    },
    function (e, t, n) {
      e.exports = function (e) {
        const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
        return (t && t[1]) || '';
      };
    },
    function (e, t) {
      e.exports = null;
    },
    function (e, t, n) {
      const r = n(12).version;
      const o = n(1);
      const i = {};
      ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(
        function (e, t) {
          i[e] = function (n) {
            return typeof n === e || 'a' + (t < 1 ? 'n ' : ' ') + e;
          };
        }
      );
      const s = {};
      (i.transitional = function (e, t, n) {
        function i(e, t) {
          return (
            '[Axios v' +
            r +
            "] Transitional option '" +
            e +
            "'" +
            t +
            (n ? '. ' + n : '')
          );
        }
        return function (n, r, a) {
          if (!1 === e)
            throw new o(
              i(r, ' has been removed' + (t ? ' in ' + t : '')),
              o.ERR_DEPRECATED
            );
          return (
            t &&
              !s[r] &&
              ((s[r] = !0),
              console.warn(
                i(
                  r,
                  ' has been deprecated since v' +
                    t +
                    ' and will be removed in the near future'
                )
              )),
            !e || e(n, r, a)
          );
        };
      }),
        (e.exports = {
          assertOptions: function (e, t, n) {
            if (typeof e !== 'object')
              throw new o('options must be an object', o.ERR_BAD_OPTION_VALUE);
            for (let r = Object.keys(e), i = r.length; i-- > 0; ) {
              const s = r[i];
              const a = t[s];
              if (a) {
                const u = e[s];
                const c = void 0 === u || a(u, s, e);
                if (!0 !== c)
                  throw new o(
                    'option ' + s + ' must be ' + c,
                    o.ERR_BAD_OPTION_VALUE
                  );
              } else if (!0 !== n)
                throw new o('Unknown option ' + s, o.ERR_BAD_OPTION);
            }
          },
          validators: i,
        });
    },
    function (e, t, n) {
      const r = n(2);
      function o(e) {
        if (typeof e !== 'function')
          throw new TypeError('executor must be a function.');
        let t;
        this.promise = new Promise(function (e) {
          t = e;
        });
        const n = this;
        this.promise.then(function (e) {
          if (n._listeners) {
            let t;
            const r = n._listeners.length;
            for (t = 0; t < r; t++) n._listeners[t](e);
            n._listeners = null;
          }
        }),
          (this.promise.then = function (e) {
            let t;
            const r = new Promise(function (e) {
              n.subscribe(e), (t = e);
            }).then(e);
            return (
              (r.cancel = function () {
                n.unsubscribe(t);
              }),
              r
            );
          }),
          e(function (e) {
            n.reason || ((n.reason = new r(e)), t(n.reason));
          });
      }
      (o.prototype.throwIfRequested = function () {
        if (this.reason) throw this.reason;
      }),
        (o.prototype.subscribe = function (e) {
          this.reason
            ? e(this.reason)
            : this._listeners
            ? this._listeners.push(e)
            : (this._listeners = [e]);
        }),
        (o.prototype.unsubscribe = function (e) {
          if (this._listeners) {
            const t = this._listeners.indexOf(e);
            t !== -1 && this._listeners.splice(t, 1);
          }
        }),
        (o.source = function () {
          let e;
          return {
            token: new o(function (t) {
              e = t;
            }),
            cancel: e,
          };
        }),
        (e.exports = o);
    },
    function (e, t, n) {
      e.exports = function (e) {
        return function (t) {
          return e.apply(null, t);
        };
      };
    },
    function (e, t, n) {
      const r = n(0);
      e.exports = function (e) {
        return r.isObject(e) && !0 === e.isAxiosError;
      };
    },
  ]);
});
